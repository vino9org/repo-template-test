# this workflow will be triggered when
#
#  1. a pull request is raised
#  2. a push to 'develop' branch takes place
#  3. a release tag is created on the repo
#
#  whenever the event is trigger, build and test will be performed
#  a container image will be created and pushed to ghcr.io only when the event trigger is push to develop or tag.
#
#  for push to develop branch, develop-YYYYMMDD-HHMISS-SHA7. the tagging should be sortable by chronological order so that
#  it can be picked up by CD tools, e.g. FluxCD, for updating the deployment automatically
#
#  for new tag, the image tag will be same as the repository tag. e.g. v0.1.0
#
#  CAVEATS:
#
#  does not support copmlete gitflow that uses long running release branches.
#  ref develop-java is for testing only. plesae do not remove the setting nor use it as your branch name

on:
  push:
    branches:
     - develop
     - main
     - develop-java

  pull_request:
    branches:
      - develop
      - main

  workflow_dispatch:

jobs:
  mvn-verify:

    runs-on: ubuntu-latest

    outputs:
      mvn_opts: ${{ steps.env.outputs.mvn_opts }}

    steps:
      - name: Setup ENVs
        id: envs
        run: |
          if [[ -d "settings.xml" ]]; then
            echo "mvn_opts='-s settings.xml'" >> $GITHUB_OUTPUT
          else
            echo "mvn_opts=" >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and test
        run: |
          ./mvnw --batch-mode ${{ steps.envs.outputs.mvn_opts }} verify
        env:
          MVN_USER: ${{ github.repository_owner }}
          MVN_TOKEN: ${{ secrets.maven_read_token }}

      - name: Check coverage report
        id: check_report
        run: |
          if [[ -f "target/jacoco/index.html" ]]; then
            echo found coverage report
            echo "coverage_report=yes" >> $GITHUB_OUTPUT
          else
            echo coverage report not found
          fi

      - name: Upload test coverage report to GitHub pages
        if: steps.check_report.outputs.coverage_report == 'yes'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site/jacoco
        continue-on-error: true

  jib:
    needs: mvn-verify
    if: startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/develop-java')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Github registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build container image
        run: |
          TAG_TIMESTAMP="$(TZ=Asia/Singapore date +'%Y%m%d-%H%M%S')-$(echo ${{ github.sha }} | cut -c 1-7)"

          if [ "${{ github.ref }}"  = "refs/heads/main" ]; then
            TAG_PREFIX="main"
          elif [ "${{ github.ref }}"  = "refs/heads/develop" ]; then
            TAG_PREFIX="develop"
          else
            TAG_PREFIX="tempj"
          fi

          TAGS="${TAG_PREFIX}-${TAG_TIMESTAMP}"

          ./mvnw --batch-mode ${{ needs.mvn-verify.outputs.mvn_opts }} \
             clean compile jib:build \
             -DskipTests \
             -Djib.disableUpdateChecks=true \
             -Djib.to.image="ghcr.io/${{ github.repository }}" \
             -Djib.to.tags="$TAGS" \
             -Dcustom.source_repo_url="https://github.com/{{ github.repository }}"
        env:
          MVN_USER: ${{ github.repository_owner }}
          MVN_TOKEN: ${{ secrets.maven_read_token }}

  clean-up:
    runs-on: ubuntu-latest
    needs: jib
    steps:
      - uses: actions/delete-package-versions@v5
        with:
          owner: ${{ github.repository_owner }}
          package-name: ${{ github.event.repository.name }}
          package-type: container
          min-versions-to-keep: 5
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true


# this workflow will be triggered when
#
#  1. a pull request is raised
#  2. a push to 'develop' branch takes place
#  3. a release tag is created on the repo
#
#  whenever the event is trigger, build and test will be performed
#  a container image will be created and pushed to ghcr.io only when the event trigger is push to develop or tag.
#
#  for push to develop branch, develop-YYYYMMDD-HHMISS-SHA7. the tagging should be sortable by chronological order so that
#  it can be picked up by CD tools, e.g. FluxCD, for updating the deployment automatically
#
#  for new tag, the image tag will be same as the repository tag. e.g. v0.1.0
#
#  CAVEATS:
#
#  does not support copmlete gitflow that uses long running release branches.

on:
  push:
    branches:
      - develop
      - main
      # only for test in this repo
      - develop-java

  pull_request:
    branches:
      - develop
      - main

  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    outputs:
      build_image: ${{ steps.envs.outputs.build_image }}

    steps:
      - name: Setup ENVs
        id: envs
        run: |
          echo "image=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
          echo "tags=develop-$(TZ=Asia/Singapore date +'%Y%m%d-%H%M%S')-$(echo ${{ github.sha }} | cut -c 1-7)" >> $GITHUB_OUTPUT

          if [[ -d "settings.xml" ]]; then
            echo "mvn_opts='-s settings.xml'" >> $GITHUB_OUTPUT
          else
            echo "mvn_opts=" >> $GITHUB_OUTPUT
          fi

          if [[ "${{ github.ref }}" == "refs/heads/main" || \
                "${{ github.ref }}" == "refs/heads/develop" ]]; then
             echo "build_image=yes" >> $GITHUB_OUTPUT
           else
             echo "build_image=no" >> $GITHUB_OUTPUT
           fi

      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and test
        run: |
          ./mvnw --batch-mode ${{ steps.envs.outputs.mvn_opts }} verify
        env:
          MVN_USER: ${{ github.repository_owner }}
          MVN_TOKEN: ${{ secrets.maven_read_token }}

      - name: Upload test coverage report to GitHub pages
        # this step is disabled by default
        if: steps.envs.outputs.build_image == 'xxx'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site/jacoco

      - name: Login to Github registry
        if: steps.envs.outputs.build_image == 'yes'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        if: steps.envs.outputs.build_image == 'yes'
        run: |
          ./mvnw --batch-mode ${{ steps.envs.outputs.mvn_opts }} \
             clean compile -DskipTests jib:build \
             --platform=linux/amd64,linux/arm64 \
             -Djib.to.image="${{ steps.envs.outputs.image }}" \
             -Djib.to.tags="${{ steps.envs.outputs.tags }}" \
             -Djib.labels=org.opencontainers.image.source="https://github.com/{{ github.repository }}" \
             -Djib.disableUpdateChecks=true

  cleanup:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/delete-package-versions@v5
        if: needs.build.outputs.build_image == 'yes'
        with:
          owner: ${{ github.repository_owner }}
          package-name: ${{ github.event.repository.name }}
          package-type: container
          min-versions-to-keep: 5
          token: ${{ secrets.GITHUB_TOKEN }}
